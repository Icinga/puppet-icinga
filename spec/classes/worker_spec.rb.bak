# frozen_string_literal: true

require 'spec_helper'

describe 'icinga::worker' do
  on_supported_os.each do |os, os_facts|
    context "on #{os}" do
      let(:facts) { os_facts }

      case os_facts[:operatingsystem]
      when 'RedHat', 'CentOS', 'Fedora', 'OracleLinux', 'Scientific', 'Debian', 'Ubuntu'

        context 'with ca_server => 172.16.0.1, zone => dmz, parents_endpoints => [foo, bar], global_zones => [foo, bar]' do
          let(:params) { { ca_server: '172.16.0.1', zone: 'dmz', parent_endpoints: {'foo'=>{}, 'bar'=>{}}, global_zones: ['foo', 'bar'] } }

          it { is_expected.to compile }
          it { is_expected.to contain_class('icinga').with(
            'ca_server' => '172.16.0.1') }
          it { is_expected.to contain_icinga2__object__zone('main') }
          it { is_expected.to contain_icinga2__object__endpoint('foo') }
          it { is_expected.to contain_icinga2__object__endpoint('bar') }
          it { is_expected.to contain_icinga2__object__zone('foo').with(
            'global' => true) }
          it { is_expected.to contain_icinga2__object__zone('bar').with(
            'global' => true) }
        end

      else
        context 'defaults' do
          it { is_expected.to compile.and_raise_error(%r{not supported}) }
        end
      end
    end

  end
end
